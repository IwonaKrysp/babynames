{"ast":null,"code":"var _jsxFileName = \"/Users/cyf/pickName/src/App.js\";\nimport React, { useSta } from \"react\";\nimport \"./css/App.css\";\nimport namesData from \"./data/namesData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  console.log(namesData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: namesData.sort((a, z) => a.name.localeCompare(z.name)).map(nameObject => {\n          const {\n            id,\n            name,\n            sex\n          } = nameObject;\n          const isBoy = sex === \"m\";\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: isBoy ? \"royalblue\" : \"pink\"\n            },\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useSta","namesData","App","console","log","sort","a","z","name","localeCompare","map","nameObject","id","sex","isBoy","color"],"sources":["/Users/cyf/pickName/src/App.js"],"sourcesContent":["import React, {useSta} from \"react\";\nimport \"./css/App.css\";\nimport namesData from \"./data/namesData.json\";\n\nfunction App() {\n  console.log(namesData);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <input type=\"text\" />\n        <div>\n          {namesData\n            .sort((a, z) => a.name.localeCompare(z.name))\n            .map((nameObject) => {\n              const { id, name, sex } = nameObject;\n              const isBoy = sex === \"m\"\n              return <div style={{color: isBoy ? \"royalblue\" : \"pink\"}}>{name}</div>;\n            })}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,SAASC,GAAT,GAAe;EACbC,OAAO,CAACC,GAAR,CAAYH,SAAZ;EACA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAQ,SAAS,EAAC,YAAlB;MAAA,wBACE;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UACGA,SAAS,CACPI,IADF,CACO,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,CAAOC,aAAP,CAAqBF,CAAC,CAACC,IAAvB,CADjB,EAEEE,GAFF,CAEOC,UAAD,IAAgB;UACnB,MAAM;YAAEC,EAAF;YAAMJ,IAAN;YAAYK;UAAZ,IAAoBF,UAA1B;UACA,MAAMG,KAAK,GAAGD,GAAG,KAAK,GAAtB;UACA,oBAAO;YAAK,KAAK,EAAE;cAACE,KAAK,EAAED,KAAK,GAAG,WAAH,GAAiB;YAA9B,CAAZ;YAAA,UAAoDN;UAApD;YAAA;YAAA;YAAA;UAAA,QAAP;QACD,CANF;MADH;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;KAlBQN,G;AAoBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}